<?php

/**
 * @file qa_forum.install
 *   Provide necessary database tables, update hooks, and uninistall.
 */

 /**
  * Implements hook_install().
  */
 function qa_forum_install() {
   _qa_forum_install_type_create();
 }

 /**
 * Creates the forum Question content type.
 */
function _qa_forum_install_type_create() {
  // Create an additional node type.
  $qaf_node_type = array(
    'type' => 'question',
    'name' => t('Question'),
    'base' => 'node_content',
    'description' => t('A <em>Question</em> starts a new discussion thread
      on a topic question.'
    ),
    'custom' => 0,
    'modified' => 0,
    'locked' => 1,
    'is_new' => TRUE,
    'settings' => array(
      'promote_enabled' => FALSE,
    ),
  );

  $qaf_node_type = node_type_set_defaults($qaf_node_type);
  node_type_save($qaf_node_type);
  node_add_body_field($qaf_node_type);
}

/**
 * Implements hook_schema().
 */
function qa_forum_schema() {
  $schema['qaf_answers'] = array(
    'description' => 'Stores the answer data and relation to parent topic question',
    'fields' => array(
      'aid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The ID of the answer.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The uid of the author of the answer.',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The nid of the parent question node.',
      ),
      'body' => array(
        'type' => 'text',
        'size' => 'normal',
        'default' => NULL,
        'description' => 'The text of the answer.',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the answer was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
      'last_modified' => array(
        'description' => 'The Unix timestamp when the answer was last modified.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
    ),
    'indexes' => array(
      'aid' => array('aid'),
      'nid' => array('nid'),
    ),
    'primary key' => array('aid'),
    'foreign keys' => array(
      'question_node' => array(
        'table' => 'node',
        'columns' => array(
          'nid' => 'nid',
        ),
      ),
    ),
  );

  $schema['qaf_comments'] = array(
    'description' => 'Contains comment data and relationship to parent answer.',
    'fields' => array(
      'qacid' => array(
        'description' => 'The ID of the qa_comment.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The uid of the author of the comment.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'aid' => array(
        'description' => 'The aid of the parent answer.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'body' => array(
        'type' => 'text',
        'size' => 'normal',
        'default' => NULL,
        'description' => 'The text of the comment.',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the comment was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
      'last_modified' => array(
        'description' => 'The Unix timestamp when the comment was last modified.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
    ),
    'indexes' => array(
      'qacid' => array('qacid'),
      'aid' => array('aid'),
    ),
    'foreign keys' => array(
      'qaf_answers' => array(
        'qaf_answers' => 'qaf_answers',
        'columns' => array('aid' => 'aid'),
      ),
    ),
  );

  $schema['qaf_events'] = array(
    'description' => 'Contains event data and relationship to parent content.',
    'fields' => array(
      'event_id' => array(
        'description' => 'The ID of the qa_comment.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The uid of the author of the comment.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cid' => array(
        'description' => 'The cid of the parent content.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vote' => array(
        'type' => 'int',
        'size' => 'tiny',
        'default' => NULL,
        'description' => 'Value of the vote: -1, 0, 1.',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the event was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
      'last_modified' => array(
        'description' => 'The Unix timestamp when the event was last modified.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default'=> 0,
      ),
    ),
    'indexes' => array(
      'qacid' => array('event_id'),
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'node' => array(
        'node' => 'node',
        'columns' => array('nid' => 'cid'),
      ),
    ),
  );

  return $schema;
}
